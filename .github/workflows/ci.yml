name: ci

on:
  push:
    branches:
      - main
      - dev
  pull_request:

env:
  NODE_VERSION: 14

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: |
            node_modules
          key: node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: install
        run: yarn --frozen-lockfile

  # test:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - setup
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #     - name: cache node_modules
  #       id: node_modules_cache_id
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #         key: node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
  #     - name: Run jest
  #       run: yarn test

  e2e:
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: |
            node_modules
          key: node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Install playwright browsers and dependencies
        run: npx playwright install --with-deps chromium
      - name: Run playwright
        run: yarn e2e
      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: screenshots
      - name: workaround for detached HEAD
        env:
          CHECKOUT_REF: ${{ (github.event_name == 'pull_request' && github.head_ref) || github.ref_name }}
        run: |
          git checkout ${CHECKOUT_REF} || git checkout -b ${CHECKOUT_REF}
      - name: Run visual regression test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          yarn reg

  # danger:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - setup
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #     - name: cache node_modules
  #       id: node_modules_cache_id
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #         key: node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
  #     - name: Run danger
  #       run: yarn danger ci
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
